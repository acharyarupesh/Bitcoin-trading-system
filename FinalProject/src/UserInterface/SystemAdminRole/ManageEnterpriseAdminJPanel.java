/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Employee.Employee;
import Business.Organization.Organization;
import Business.Roles.EnterpriseAdmin;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Font;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import jdk.nashorn.internal.ir.BreakNode;
//import com.teknikindustries.bulksms.SMS;

/**
 *
 * @author raunak
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private String username;
    private long mobilenumber;
    private String email;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, EcoSystem business) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.business = business;

        populateTable();
        populateNetworkComboBox();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise.getName();
                    row[1] = network.getName();
                    row[2] = userAccount.getUsername();

                    model.addRow(row);
                }
            }
        }
        enterpriseJTable.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 16));
    }

    private void populateNetworkComboBox() {

        for (Network network : business.getNetworkList()) {
            networkJComboBox.addItem(network);
        }
    }

    private void populateEnterpriseComboBox(Network network) {
        if (network != null) {
            enterpriseJComboBox.removeAllItems();
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                enterpriseJComboBox.addItem(enterprise);
            }
        } else {
            enterpriseJComboBox.removeAllItems();
            enterpriseJComboBox.addItem("--Select--");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        networkJLabel = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        enterpriseJLabel = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        usernameJLabel = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        passwordJLabel = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        nameJLabel = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        backJButton = new javax.swing.JButton();
        emailJLabel = new javax.swing.JLabel();
        mobileNumberTextField = new javax.swing.JTextField();
        mobileJLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        headingJLabel = new javax.swing.JLabel();

        enterpriseJTable.setAutoCreateRowSorter(true);
        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Network", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        networkJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        networkJLabel.setText("Network:");

        networkJComboBox.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });

        enterpriseJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        enterpriseJLabel.setText("Username:");

        usernameJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        usernameJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        usernameJLabel.setText("Enterprise:");

        enterpriseJComboBox.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--" }));

        submitJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        passwordJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        passwordJLabel.setText("Password:");

        nameJTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        nameJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        nameJLabel.setText("Name:");

        passwordJPasswordField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        emailJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        emailJLabel.setText("Email:");

        mobileNumberTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        mobileJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        mobileJLabel.setText("Mobile:");

        emailTextField.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        headingJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingJLabel.setText("Manage Enterprise");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mobileJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emailJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(enterpriseJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(usernameJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(networkJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordJPasswordField)
                            .addComponent(usernameJTextField)
                            .addComponent(enterpriseJComboBox, 0, 226, Short.MAX_VALUE)
                            .addComponent(networkJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emailTextField)
                            .addComponent(nameJTextField)
                            .addComponent(mobileNumberTextField))
                        .addGap(504, 504, 504))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(headingJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(335, 335, 335)
                                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(networkJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(networkJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobileJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobileNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed

        if (!networkJComboBox.getSelectedItem().toString().equals("--Select--")) {
            Network network = (Network) networkJComboBox.getSelectedItem();
            if (network != null) {
                populateEnterpriseComboBox(network);
            }
        } else {
            populateEnterpriseComboBox(null);
        }

    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        Network n = (Network) networkJComboBox.getSelectedItem();
        if (!n.getEnterpriseDirectory().getEnterpriseList().isEmpty()) {
            if (!networkJComboBox.getSelectedItem().toString().equals("--Select--")
                    && !enterpriseJComboBox.getSelectedItem().toString().equals("--Select--")
                    && !usernameJTextField.getText().trim().isEmpty()
                    && !passwordJPasswordField.getText().trim().isEmpty()
                    && !nameJTextField.getText().trim().isEmpty()
                    && !emailTextField.getText().trim().isEmpty()
                    && !mobileNumberTextField.getText().trim().isEmpty()) {
                Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();
                username = usernameJTextField.getText();
                try {
                    mobilenumber = Long.parseLong(mobileNumberTextField.getText());
                    String password = String.valueOf(passwordJPasswordField.getPassword());
                    String name = nameJTextField.getText();
                    email = emailTextField.getText();
                    if (enterprise.getUserAccountDirectory().checkIfUsernameIsUnique(username) == true) {
                        if (!String.valueOf(mobilenumber).matches("[a-zA-Z]") && String.valueOf(mobilenumber).length() == 10 && String.valueOf(mobilenumber).matches("[0-9]+")) {
                            if (email.matches("^[a-zA-Z0-9_+&*-]+(?:\\." + "[a-zA-Z0-9_+&*-]+)*@" + "(?:[a-zA-Z0-9-]+\\.)+[a-z" + "A-Z]{2,7}$")) {
                                if (usernameJTextField.getText().equals(passwordJPasswordField.getText())) {
                                    JOptionPane.showMessageDialog(null, "Username and password cannot be same");
                                } else {
                                    Employee employee = enterprise.getEmployeeDirectory().addEmployee(name, email, mobilenumber, Organization.Type.EnterpriseAdmin);
                                    UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new EnterpriseAdmin());
                                    populateTable();
//                                SMS sms= new SMS();
//                                sms.SendSMS("Niymahes", "mavericks", "Hi Welcome to mavericks system","+1"+mobileNumberTextField.getText() , "http://usa.bulksms.com/eapi/submission/send_sms/2/2.0");
                                    JOptionPane.showMessageDialog(null, "Message sent!");
                                    Properties props = new Properties();
                                    props.put("mail.smtp.host", "smtp.gmail.com");
                                    props.put("mail.smtp.socketFactory.port", "465");
                                    props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
                                    props.put("mail.smtp.auth", "true");
                                    props.put("mail.smtp.port", "465");

                                    Session session = Session.getDefaultInstance(props,
                                            new javax.mail.Authenticator() {
                                        protected PasswordAuthentication getPasswordAuthentication() {
                                            return new PasswordAuthentication("acharya.rupesh0@gmail.com", "dishaclasses");
                                        }
                                    }
                                    );
                                    try {
                                        Message message = new MimeMessage(session);
                                        message.setFrom(new InternetAddress("acharya.rupesh0@gmail.com"));
                                        System.out.print(email);
                                        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(email));
                                        message.setSubject("Welcome to the mavericks project");
                                        message.setText("Hi new sign up done successfully");
                                        Transport.send(message);
                                        JOptionPane.showMessageDialog(null, "Mail is sent");
                                    } catch (Exception e) {
                                        JOptionPane.showMessageDialog(null, e);
                                    }
                                    JOptionPane.showMessageDialog(null, "User added successfully");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Please enter valid email address");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Please enter valid 10 digit mobile number");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Username already exists");
                    }
                } catch (NumberFormatException ne) {
                    JOptionPane.showMessageDialog(null, "Please enter valid number");
                }
            } else {
                JOptionPane.showMessageDialog(null, "All fields are madatory");
            }
        } else {
            JOptionPane.showMessageDialog(null, "All fields are madatory");
        }
        networkJComboBox.setSelectedIndex(0);
        enterpriseJComboBox.setSelectedIndex(0);
        usernameJTextField.setText("");
        emailTextField.setText("");
        passwordJPasswordField.setText("");
        mobileNumberTextField.setText("");
        nameJTextField.setText("");
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel emailJLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JLabel enterpriseJLabel;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mobileJLabel;
    private javax.swing.JTextField mobileNumberTextField;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JLabel networkJLabel;
    private javax.swing.JLabel passwordJLabel;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JLabel usernameJLabel;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
