/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.MallEnterprise.CustomerROle;

import Business.BookingHistory.OrderItem;
import Business.BookingHistory.Product;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Actor.Customer;
import Business.Organization.Actor.Retailer;
import Business.Organization.Organization;
import Business.Organization.RetailerOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MinerWorkRequest;
import java.awt.CardLayout;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Niyati Maheshwari
 */
public class CustomerDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerDetailsJPanel
     */
    private JPanel userProcessContainer;
    private Customer customer;
    private ArrayList<OrderItem> list;
    private RetailerOrganization e;
    private Enterprise enterprise;
    private EcoSystem business;
    private UserAccount account;
    private double amount;

    public CustomerDetailsJPanel(JPanel userProcessContainer, Customer customer, Enterprise enterprise, ArrayList<OrderItem> list, EcoSystem business, UserAccount account, double amount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.customer = customer;
        this.list = list;
        this.enterprise = enterprise;
        this.business=business;
        this.account = account;
        this.amount = amount;
        orderPanel.setVisible(false);
        System.out.print(account);
    }

    public void calculateTotal() {
        int total = 0;
        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
                if ("Retailer".equals(String.valueOf(ua.getEmployee().getType()))) {
                    Retailer r = (Retailer) ua.getEmployee();
                    for (Product p : r.getProductCatalog().getProductCatalog()) {
                        total += p.getSold() * p.getPrice();
                    }
                }
            }
        }
        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
                if ("Retailer".equals(String.valueOf(ua.getEmployee().getType()))) {
                    Retailer r = (Retailer) ua.getEmployee();
                    r.setRevenueOfTheDay(total);
                    double x = total - total * (0.1 / 100);
                    r.setInvoiceRequest(x);
                    total = 0;
                }
            }
        }
    }
    
    public UserAccount getMallAdmin() {
        UserAccount userAccount = null;
        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
                        if ("MallAdmin".equals(String.valueOf(ua.getEmployee().getType()))) {
                            userAccount = ua;
                            break;
                        }
                    }
                }
            }
        }
        return userAccount;
    }
    

//        for(Retailer r : business.getRetailerDirectory().getRetailerList()){
//            System.out.println(r.getRevenueOfTheDay());
//        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headingJLabel = new javax.swing.JLabel();
        nameJLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        addressJLabel = new javax.swing.JLabel();
        streetJLabel = new javax.swing.JLabel();
        streetTextField = new javax.swing.JTextField();
        cityJLabel = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        stateJLabel = new javax.swing.JLabel();
        stateTextField = new javax.swing.JTextField();
        zipcodeJLabel = new javax.swing.JLabel();
        zipcodeTextField = new javax.swing.JTextField();
        phoneNoJLabel = new javax.swing.JLabel();
        phoneNoTextField = new javax.swing.JTextField();
        payButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        orderPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        finalTable = new javax.swing.JTable();
        historyJLabel = new javax.swing.JLabel();

        headingJLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        headingJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingJLabel.setText("Customer Details");

        nameJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        nameJLabel.setText("Name:");

        nameTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        addressJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        addressJLabel.setText("Address");

        streetJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        streetJLabel.setText("Street:");

        streetTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cityJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        cityJLabel.setText("City:");

        cityTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        stateJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        stateJLabel.setText("State");

        stateTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        zipcodeJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        zipcodeJLabel.setText("Zip Code:");

        zipcodeTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        phoneNoJLabel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        phoneNoJLabel.setText("Phone number:");

        phoneNoTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        payButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        payButton.setText("Pay");
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        finalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Delivery Details"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(finalTable);

        historyJLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        historyJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        historyJLabel.setText("Order History and Tracking");

        javax.swing.GroupLayout orderPanelLayout = new javax.swing.GroupLayout(orderPanel);
        orderPanel.setLayout(orderPanelLayout);
        orderPanelLayout.setHorizontalGroup(
            orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderPanelLayout.createSequentialGroup()
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(orderPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(historyJLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        orderPanelLayout.setVerticalGroup(
            orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(historyJLabel)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headingJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addressJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 21, Short.MAX_VALUE)
                        .addComponent(nameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(300, 300, 300)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(phoneNoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phoneNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(zipcodeJLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(stateJLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cityJLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(streetJLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(streetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(zipcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(orderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(headingJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addressJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(46, 46, 46))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(streetJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(streetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cityJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(stateJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(zipcodeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(zipcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(phoneNoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phoneNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(42, 42, 42)
                        .addComponent(payButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed

        if (nameTextField.getText().trim().isEmpty() || streetTextField.getText().trim().isEmpty() || cityTextField.getText().trim().isEmpty() || stateTextField.getText().trim().isEmpty() || zipcodeTextField.getText().trim().isEmpty() || phoneNoTextField.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "All the fields are mandatory", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (!zipcodeTextField.getText().trim().matches("\\d+") || !phoneNoTextField.getText().trim().matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Please enter valid data.\nFor example zipcode contains only numbers", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Thank You for the payment!\nYour Order has been placed. Please check the delivery details in the next page.");
            nameJLabel.setVisible(false);
            headingJLabel.setVisible(false);
            nameTextField.setVisible(false);
            cityJLabel.setVisible(false);
            streetJLabel.setVisible(false);
            stateJLabel.setVisible(false);
            zipcodeJLabel.setVisible(false);
            phoneNoJLabel.setVisible(false);
            streetTextField.setVisible(false);
            cityTextField.setVisible(false);
            stateTextField.setVisible(false);
            zipcodeTextField.setVisible(false);
            phoneNoTextField.setVisible(false);
            payButton.setVisible(false);
            addressJLabel.setVisible(false);
            orderPanel.setVisible(true);

            DefaultTableModel dtm = (DefaultTableModel) finalTable.getModel();
            dtm.setRowCount(0);

            for (OrderItem oil : customer.getPlaceOrder().getPlaceOrderList()) {
                Object row[] = new Object[2];
                row[0] = oil.getProduct().getProductName();
                if ("Boston".equals(cityTextField.getText())) {
                    row[1] = "Expected within 2 hours";
                    customer.setTracking("Expected within 2 hours");
                } else {
                    row[1] = "Expected in 1 day";
                    customer.setTracking("Expected in 1 day");
                }
                dtm.addRow(row);
            }

            finalTable.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 16));
            calculateTotal();

        }
        
        
        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if ("Exchange".equals(String.valueOf(enterprise.getEnterpriseType()))) {
                    for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (o.getName().equals("Miner Organization")) {
                            MinerWorkRequest minerRequest = new MinerWorkRequest();
                            minerRequest.setRequestedDate(new Date());
                            minerRequest.setSender(account);
                            minerRequest.setReceiver(getMallAdmin());
                            minerRequest.setStatus("Payment Initiated");
                            minerRequest.setBitcoinRewards(1);
                            minerRequest.setBitcoinsRequested(amount);
                            o.getWorkqueue().getWorkRequestList().add(minerRequest);
                        }
                    }
                }
            }
        }
        


    }//GEN-LAST:event_payButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        DefaultTableModel dtm = (DefaultTableModel) finalTable.getModel();
        dtm.setRowCount(0);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressJLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel cityJLabel;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JTable finalTable;
    private javax.swing.JLabel headingJLabel;
    private javax.swing.JLabel historyJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPanel orderPanel;
    private javax.swing.JButton payButton;
    private javax.swing.JLabel phoneNoJLabel;
    private javax.swing.JTextField phoneNoTextField;
    private javax.swing.JLabel stateJLabel;
    private javax.swing.JTextField stateTextField;
    private javax.swing.JLabel streetJLabel;
    private javax.swing.JTextField streetTextField;
    private javax.swing.JLabel zipcodeJLabel;
    private javax.swing.JTextField zipcodeTextField;
    // End of variables declaration//GEN-END:variables
}
